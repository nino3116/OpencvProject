"""empty message

Revision ID: da02d07ef34c
Revises: 
Create Date: 2025-04-19 15:20:37.086655

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'da02d07ef34c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cam_name', sa.String(length=255), nullable=True),
    sa.Column('cam_url', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_recording', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('cams', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_cams_cam_name'), ['cam_name'], unique=True)

    op.create_table('mode_detected',
    sa.Column('idx', sa.Integer(), nullable=False),
    sa.Column('mode_type', sa.Enum('Running', 'Cleaning', 'Secure'), nullable=True),
    sa.Column('person_reserved', sa.Integer(), nullable=True),
    sa.Column('max_person_detected', sa.Integer(), nullable=True),
    sa.Column('detected_time', sa.DateTime(), nullable=True),
    sa.Column('dend_time', sa.DateTime(), nullable=True),
    sa.Column('mode_schedule_id', sa.Integer(), nullable=True),
    sa.Column('info', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('mode_schedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mode_type', sa.Enum('Running', 'Cleaning', 'Secure'), nullable=False),
    sa.Column('people_cnt', sa.Integer(), nullable=True),
    sa.Column('rep_name', sa.String(length=256), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('memo', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('place_logs',
    sa.Column('idx', sa.Integer(), nullable=False),
    sa.Column('tp_cnt', sa.Integer(), nullable=True),
    sa.Column('dt_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('is_kakao', sa.Boolean(), nullable=True),
    sa.Column('kakao_access_token', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=False)

    op.create_table('camera_logs',
    sa.Column('idx', sa.Integer(), nullable=False),
    sa.Column('camera_idx', sa.Integer(), nullable=True),
    sa.Column('dp_cnt', sa.String(length=256), nullable=True),
    sa.Column('detected_time', sa.DateTime(), nullable=True),
    sa.Column('plog_idx', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['camera_idx'], ['cams.id'], name='cam_id'),
    sa.ForeignKeyConstraint(['plog_idx'], ['place_logs.idx'], name='plog_id'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('videos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('camera_id', sa.Integer(), nullable=True),
    sa.Column('camera_name', sa.String(length=256), nullable=True),
    sa.Column('recorded_date', sa.DateTime(), nullable=True),
    sa.Column('recorded_time', sa.Time(), nullable=True),
    sa.Column('video_path', sa.String(length=256), nullable=True),
    sa.Column('is_dt', sa.Boolean(), nullable=True),
    sa.Column('dt_log_idx', sa.Integer(), nullable=True),
    sa.Column('rend_date', sa.Date(), nullable=True),
    sa.Column('rend_time', sa.Time(), nullable=True),
    sa.ForeignKeyConstraint(['camera_id'], ['cams.id'], ),
    sa.ForeignKeyConstraint(['camera_name'], ['cams.cam_name'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('video_path')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('videos')
    op.drop_table('camera_logs')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('place_logs')
    op.drop_table('mode_schedule')
    op.drop_table('mode_detected')
    with op.batch_alter_table('cams', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cams_cam_name'))

    op.drop_table('cams')
    # ### end Alembic commands ###
